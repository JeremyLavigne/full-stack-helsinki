{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","getAll","a","request","axios","get","response","data","create","newObject","post","update","id","put","deletePerson","delete","SuccessMsg","successMsg","style","color","fontStyle","fontSize","ErrorMsg","errorMsg","Filter","onChange","filter","value","AddSomeone","onSubmit","newName","newNumber","onChange2","type","Numbers","persons","onClick","person","name","toLowerCase","includes","map","key","number","App","useState","setPersons","setNewName","setNewNumber","setFilter","setSuccessMsg","setErrorMsg","useEffect","personService","then","initialPersons","console","log","event","target","preventDefault","window","confirm","updateObject","catch","error","setTimeout","p","personObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e4ae0ba.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl)\n  const response = await request\n    return response.data\n}\n\nconst create = async (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    const response = await request\n        return response.data\n}\n\nconst update = async  (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    const response = await request\n        return response.data\n}\n\nconst deletePerson = async  (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    const response = await request\n        return response.data\n}\n  \nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n\nconst SuccessMsg = ({successMsg}) => {\n  const successMsgStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  if (successMsg !== '') {\n    return (\n      <p style={successMsgStyle}>{successMsg}</p>\n    )\n  } else {\n    return null\n  }\n}\n\nconst ErrorMsg = ({errorMsg}) => {\n  const errorMsgStyle = {\n    color: 'red',\n    fontStyle: 'bold',\n    fontSize: 18\n  }\n\n  if (errorMsg !== '') {\n    return (\n      <p style={errorMsgStyle}>{errorMsg}</p>\n    )\n  } else {\n    return null\n  }\n}\n\nconst Filter = ({onChange, filter}) => {\n    return ( \n     <div>\n        Filter : <input value={filter} onChange={onChange}/>\n     </div> \n    )\n}\n\nconst AddSomeone = ({onSubmit, newName, newNumber, onChange, onChange2}) => {\n    return (  \n      <form onSubmit={onSubmit}>\n        <div>\n          Name: <input value={newName} onChange={onChange}/>\n          <br />\n          Number: <input value={newNumber} onChange={onChange2}/>\n        </div>\n        <br />\n        <div>\n          <button type=\"submit\">Add Name</button>\n        </div>\n      </form>   \n    )\n}\n\nconst Numbers = ({persons, filter, onClick}) => {\n    return (\n        <ul>\n            {persons\n            .filter((person) => person.name.toLowerCase().includes(filter))\n            .map((person) => <li key={person.name}>{person.name}, {person.number}<button onClick={(id, name) => onClick(person.id, person.name)}>&#9760;</button></li>)}\n        </ul>\n    )\n}\n\n\n\nconst App = () => {\n\n    // ------------------ Variables ------------------\n\n  const [ persons, setPersons ] = useState([])  // Contains all persons\n  const [ newName, setNewName ] = useState('')  // Contain Name of the person to add\n  const [ newNumber, setNewNumber ] = useState('') // Contain Number of the person to add\n  const [ filter, setFilter ] = useState('') // Contain the content of the filter input\n  const [ successMsg, setSuccessMsg ] = useState( '' ) \n  const [ errorMsg, setErrorMsg ] = useState( '' ) \n\n  // Fill \"persons\" array with json file, on server\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled (getAll, first)')\n        setPersons(initialPersons)\n      })\n  }, [])\n\n\n    // ----------------- Methods ---------------------\n\n  const addSomeone = (event) => {\n    event.preventDefault()\n\n    console.log(\"already in array ? \", persons.map((person) => person.name).includes(newName))\n\n    if (!persons.map((person) => person.name).includes(newName)) {\n        const personObject = {\n            name : newName,\n            number : newNumber\n        }\n\n        // Add it to the server\n        personService\n          .create(personObject)\n          .then(personObject => {\n            console.log('promise fulfilled (create), with new object :', personObject)\n            setPersons(persons.concat(personObject))\n          })\n    \n        // Display message during two seconds\n        setSuccessMsg(`${newName} has been successfully add`)\n        setTimeout(() => {\n          setSuccessMsg('')\n        }, 2000)\n\n        // Reinitialize Name and Number for the next one\n        setNewName('')\n        setNewNumber('')\n\n    } else {\n        // If name already exist, ask for changing the number, and so update it\n        if (window.confirm(`${newName} is already added to phonebook, would you like to change the number?`)) {\n          \n          // How to get the id ? \n          console.log(persons.filter((person) => person.name === newName))\n\n          const id = persons.filter((person) => person.name === newName)[0].id\n          const updateObject = {\n            name : newName,\n            number : newNumber\n          }\n\n          personService\n            .update(id, updateObject)\n            .then(updateObject => {\n              console.log('promise fulfilled (update), with object :', updateObject)\n              setPersons(persons.map((person) => person.name !== newName ? person : updateObject))\n            })\n            .catch(error => { \n              setErrorMsg(\n                `Person '${newName}' was already removed from server`\n              )\n              setTimeout(() => {\n                setErrorMsg('')\n              }, 3000)\n              setPersons(persons.filter(p => p.id !== id))\n            })\n        \n        } else {\n          console.log(\"Cancelled, nothing changes\")\n          setNewName('')\n          setNewNumber('')\n        }\n    }\n  }\n\n  const deleteSomeone = (id, name) => {\n\n\n    console.log('Zoup, you are dead, you with id :', id, 'and name :', name)\n\n    personService\n      .deletePerson(id)\n      .then(()=> {\n        console.log('promise fulfilled (delete), object id :', id)\n\n        // Works, but let the old id (if you delete id 5, old id 6 stays at 6 and not become 5)\n        // Is it that bad?\n        setPersons(persons.filter(p => p.id !== id))\n\n      }) \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  //console.log(\"Persons array :\", persons, \" , newName variable :\", newName, \" , newNumber variable :\", newNumber,\" , filter variable :\", filter)\n\n  return (\n    <div>\n\n      <h2>Phonebook</h2>\n      <SuccessMsg \n        successMsg={successMsg}\n      />\n      <Filter \n        onChange={handleFilterChange}\n        filter={filter}\n      /> \n\n      <h2>Add someone</h2>\n      <AddSomeone \n        onSubmit={addSomeone}\n        newName={newName}\n        newNumber={newNumber}\n        onChange={handleNameChange}\n        onChange2={handleNumberChange}\n      /> \n\n      <h2>Numbers</h2>\n      <ErrorMsg \n        errorMsg={errorMsg}\n      />\n\n      <Numbers \n        persons={persons}\n        filter={filter}\n        onClick={deleteSomeone}\n      />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}